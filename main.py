import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import WebAppInfo, InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from aiogram.filters import Command
from dotenv import load_dotenv
import os

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()
TOKEN = os.getenv("BOT_TOKEN")  

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (Reply-–∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞)
menu_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="‚úÖ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω", web_app=WebAppInfo(url="https://trh-dt.github.io/Oscuro_Tienda/index.html"))],
        [KeyboardButton(text="üì¶ –ö–∞—Ç–∞–ª–æ–≥"), KeyboardButton(text="‚ÑπÔ∏è –ü–æ–º–æ—â—å")],
        [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")]
    ],
    resize_keyboard=True
)

# Inline-–∫–Ω–æ–ø–∫–∏ (–¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞)
shop_inline_keyboard = InlineKeyboardMarkup(
    inline_keyboard=[
        [InlineKeyboardButton(text="‚úÖ –ü–µ—Ä–µ–π—Ç–∏ –≤ –º–∞–≥–∞–∑–∏–Ω", web_app=WebAppInfo(url="https://trh-dt.github.io/Oscuro_Tienda/index.html"))],
        [InlineKeyboardButton(text="üì¶ –ö–∞—Ç–∞–ª–æ–≥", callback_data="catalog"), InlineKeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", callback_data="contacts")]
    ]
)

# –ö–æ–º–∞–Ω–¥–∞ /start
@dp.message(Command("start"))
async def start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ HTR Shop! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=menu_keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–∞—Ç–∞–ª–æ–≥"
@dp.message(lambda message: message.text == "üì¶ –ö–∞—Ç–∞–ª–æ–≥")
async def catalog(message: types.Message):
    await message.answer("üóÉÔ∏è –ö–∞—Ç–∞–ª–æ–≥ —Ç–æ–≤–∞—Ä–æ–≤:\n‚ôªÔ∏è –ß–µ—Ö–ª—ã\n‚ôªÔ∏è –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã\n‚ôªÔ∏è –§—É—Ç–±–æ–ª–∫–∏ —Å –ø—Ä–∏–Ω—Ç–∞–º–∏\n‚ôªÔ∏è–•—É–¥–∏ —Å –ø—Ä–∏–Ω—Ç–∞–º–∏\n–°–∫–æ—Ä–æ –¥–æ–±–∞–≤–∏–º –±–æ–ª—å—à–µ —Ç–æ–≤–∞—Ä–æ–≤!", reply_markup=shop_inline_keyboard)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ö–æ–Ω—Ç–∞–∫—Ç—ã"
@dp.message(lambda message: message.text == "üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã")
async def contacts(message: types.Message):
    await message.answer("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n–¢–µ–ª–µ–≥—Ä–∞–º: @estilo_01")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–∫–∏ "–ü–æ–º–æ—â—å"
@dp.message(lambda message: message.text == "‚ÑπÔ∏è –ü–æ–º–æ—â—å")
async def help_cmd(message: types.Message):
    await message.answer("‚ÑπÔ∏è –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º?\n\n1Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ \"‚úÖ –û—Ç–∫—Ä—ã—Ç—å –º–∞–≥–∞–∑–∏–Ω\" ‚Äì —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –≤ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ.\n2Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ \"üì¶ –ö–∞—Ç–∞–ª–æ–≥\" ‚Äì —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤.\n3Ô∏è‚É£ –ù–∞–∂–º–∏—Ç–µ \"üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã\" ‚Äì –¥–ª—è —Å–≤—è–∑–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π.\n\n–ü—Ä–∏—è—Ç–Ω—ã—Ö –ø–æ–∫—É–ø–æ–∫!")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback-–∫–Ω–æ–ø–æ–∫
@dp.callback_query()
async def handle_callback(callback: types.CallbackQuery):
    if callback.data == "catalog":
        await callback.message.answer("üì¶ –ö–∞—Ç–∞–ª–æ–≥: https://t.me/oscuro_tienda_bot")
    elif callback.data == "contacts":
        await callback.message.answer("üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã:\n–¢–µ–ª–µ–≥—Ä–∞–º: @estilo_01")

async def main():
    logging.basicConfig(level=logging.INFO)
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
    
    
    